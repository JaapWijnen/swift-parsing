{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"],"title":"Enumerations"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/parsing"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"Parsing","modules":[{"name":"Parsing"}],"role":"collection","symbolKind":"module","roleHeading":"Framework","title":"Parsing"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"title":"OneOfMany","role":"symbol","url":"\/documentation\/parsing\/oneofmany","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","title":"Rest","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns it as its output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"url":"\/documentation\/parsing\/rest","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"type":"topic","title":"Parsers","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"url":"\/documentation\/parsing\/startswith","title":"StartsWith","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"url":"\/documentation\/parsing\/fail","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"type":"topic","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","title":"Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"parse(_:)","role":"symbol","url":"\/documentation\/parsing\/lazy\/parse(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/prefixthrough","title":"PrefixThrough"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FirstWhere","kind":"identifier"}],"navigatorTitle":[{"text":"FirstWhere","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","kind":"symbol","url":"\/documentation\/parsing\/firstwhere","abstract":[],"title":"FirstWhere","deprecated":true,"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"role":"symbol","kind":"symbol","title":"Whitespace","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"title":"Conditional","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","type":"topic","url":"\/documentation\/parsing\/conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"abstract":[{"type":"text","text":"A type-erased parser of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"title":"AnyParser","role":"symbol","url":"\/documentation\/parsing\/anyparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"title":"Always","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A parser that always succeeds by returning the provided value, but does not consume any of its"},{"type":"text","text":" "},{"type":"text","text":"input."}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"url":"\/documentation\/parsing\/prefixupto","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"title":"PrefixUpTo","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"url":"\/documentation\/parsing\/newline","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","type":"reference","isActive":true},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"title":"Lazy","role":"symbol","url":"\/documentation\/parsing\/lazy","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"url":"\/documentation\/parsing\/end","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"End"}],"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"title":"End"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","title":"Many","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"title":"Prefix","url":"\/documentation\/parsing\/prefix","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"url":"\/documentation\/parsing\/first","title":"First","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","kind":"symbol","role":"symbol"}}}