{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"externalID":"s:7Parsing6PrefixV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"title":"Prefix","modules":[{"name":"Parsing"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"type":"codeVoice","code":"Sequence.prefix"},{"text":", which it uses under the hood to consume a number","type":"text"},{"text":" ","type":"text"},{"text":"of elements and return them as output. It can be configured with minimum and maximum lengths,","type":"text"},{"text":" ","type":"text"},{"text":"as well as a predicate.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, to parse as many numbers off the beginning of a substring:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"123 hello world\"[...]","Prefix { $0.isNumber }.parse(&input) \/\/ \"123\"","input \/\/ \" Hello world\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you wanted this parser to fail if "},{"type":"emphasis","inlineContent":[{"type":"text","text":"no"}]},{"type":"text","text":" numbers are consumed, you could introduce a minimum"},{"type":"text","text":" "},{"type":"text","text":"length."}]},{"type":"codeListing","syntax":"swift","code":["var input = \"No numbers here\"[...]","Prefix(1...) { $0.isNumber }).parse(&input) \/\/ nil","input \/\/ \"No numbers here\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and"},{"type":"text","text":" "},{"type":"text","text":"maximum lengths provided:"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"Lorem ipsum dolor\"[...]","Prefix(2).parse(&input) \/\/ \"Lo\"","input \/\/ \"rem ipsum dolor\""]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"],"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/minLength":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","url":"\/documentation\/parsing\/prefix\/minlength","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","role":"symbol","title":"minLength","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"title":"Prefix","url":"\/documentation\/parsing\/prefix","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/parse(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/prefix\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(minLength:maxLength:while:)":{"title":"init(minLength:maxLength:while:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)","kind":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","title":"init(_:while:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","title":"init(_:while:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-4n2mo":{"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","title":"init(_:while:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/prefix\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"kind":"symbol","role":"symbol","title":"init(_:while:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","type":"topic","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/predicate":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate","url":"\/documentation\/parsing\/prefix\/predicate","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?"}],"kind":"symbol","role":"symbol","title":"predicate","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/maxLength":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","url":"\/documentation\/parsing\/prefix\/maxlength","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"maxLength","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"}}}