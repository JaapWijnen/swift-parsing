{"kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringUUIDParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"],"kind":"relationships"}],"metadata":{"title":"Parser","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Parser","kind":"identifier"}],"externalID":"s:7Parsing6ParserP","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"modules":[{"name":"Parsing"}],"symbolKind":"protocol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"A parser attempts to parse a nebulous piece of data, represented by the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" associated type,"},{"type":"text","text":" "},{"type":"text","text":"into something more well-structured, represented by the "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" associated type. The parser"},{"type":"text","text":" "},{"type":"text","text":"implements the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","isActive":true},{"type":"text","text":" method, which is handed an "},{"type":"codeVoice","code":"inout Input"},{"type":"text","text":", and its job is to"},{"type":"text","text":" "},{"type":"text","text":"turn this into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" if possible, or otherwise return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it cannot, which represents"},{"type":"text","text":" "},{"type":"text","text":"a parsing failure."}],"type":"paragraph"},{"inlineContent":[{"text":"The argument of the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","isActive":true,"type":"reference"},{"text":" function is ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":" because a parser will usually","type":"text"},{"text":" ","type":"text"},{"text":"consume some of the input in order to produce an output. For example, we can use the","type":"text"},{"text":" ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":" parser to extract an integer from the beginning of a ","type":"text"},{"code":"UTF8View","type":"codeVoice"},{"text":" and consume that","type":"text"},{"text":" ","type":"text"},{"text":"portion of the string:","type":"text"}],"type":"paragraph"},{"code":["var input = \"123 Hello world\"[...].utf8","let output = Int.parser.parse(&input)","precondition(output == 123)","precondition(input.elementsEqual(\" Hello world\"[...].utf8))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"It is best practice for a parser to "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" consume any of the input if it fails to produce an"},{"type":"text","text":" "},{"type":"text","text":"output. This allows for “backtracking”, which means if a parser fails then another parser can"},{"type":"text","text":" "},{"type":"text","text":"try on the original input."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}],"title":"Parsers.UUIDParser","role":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Float80Parser":{"abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Float80Parser"}],"type":"topic","title":"Parsers.Float80Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","url":"\/documentation\/parsing\/parsers\/float80parser","navigatorTitle":[{"kind":"identifier","text":"Float80Parser"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take6":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take6","kind":"identifier"}],"title":"Parsers.Take6","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","type":"topic","url":"\/documentation\/parsing\/parsers\/take6","navigatorTitle":[{"text":"Take6","kind":"identifier"}],"abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/ignoreOutput()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"ignoreOutput()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" instead.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/ignoreoutput()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"title":"Parsers.Stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringDoubleParser":{"navigatorTitle":[{"text":"SubstringDoubleParser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/substringdoubleparser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","title":"Parsers.SubstringDoubleParser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringDoubleParser","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes a double from the beginning of a substring."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5a47k":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"F","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"G","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"H","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"J","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6Take11V","text":"Take11","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"J","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"title":"take(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-5a47k","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"title":"Parsers.FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"kind":"symbol","type":"topic","title":"map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/unicodeScalars":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeScalars"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO25SubstringToUnicodeScalarsV","text":"SubstringToUnicodeScalars"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/parsing\/parser\/unicodescalars","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":"."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","title":"unicodeScalars"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take11":{"navigatorTitle":[{"kind":"identifier","text":"Take11"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/take11","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","title":"Parsers.Take11","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take11"}],"abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond":{"navigatorTitle":[{"text":"SkipSecond","kind":"identifier"}],"abstract":[{"text":"A parser that runs two parsers, one after the other, taking only the output of the first","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkipSecond","kind":"identifier"}],"title":"Parsers.SkipSecond","role":"symbol","url":"\/documentation\/parsing\/parsers\/skipsecond","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"title":"Conditional","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","type":"topic","url":"\/documentation\/parsing\/conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloatParser":{"navigatorTitle":[{"text":"SubstringFloatParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringfloatparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloatParser","kind":"identifier"}],"type":"topic","title":"Parsers.SubstringFloatParser","kind":"symbol","role":"symbol","abstract":[{"text":"A parser that consumes a float from the beginning of a substring.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UnicodeScalarViewToUTF8View":{"url":"\/documentation\/parsing\/parsers\/unicodescalarviewtoutf8view","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarViewToUTF8View"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarViewToUTF8View"}],"abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"title":"Parsers.UnicodeScalarViewToUTF8View"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"title":"flatMap(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/parsing\/parser\/flatmap(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser":{"navigatorTitle":[{"text":"SubstringBoolParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a substring.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringBoolParser","kind":"identifier"}],"title":"Parsers.SubstringBoolParser","role":"symbol","url":"\/documentation\/parsing\/parsers\/substringboolparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FirstWhere","kind":"identifier"}],"navigatorTitle":[{"text":"FirstWhere","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","kind":"symbol","url":"\/documentation\/parsing\/firstwhere","abstract":[],"title":"FirstWhere","deprecated":true,"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/compactmap","type":"topic","title":"Parsers.CompactMap","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given transformation with the"},{"type":"text","text":" "},{"type":"text","text":"output of its upstream parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/DoubleParser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleParser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DoubleParser"}],"url":"\/documentation\/parsing\/parsers\/doubleparser","kind":"symbol","abstract":[{"text":"A parser that consumes a double from the beginning of a collection of UTF-8 code units.","type":"text"}],"title":"Parsers.DoubleParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"title":"Prefix","url":"\/documentation\/parsing\/prefix","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"url":"\/documentation\/parsing\/prefixupto","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"title":"PrefixUpTo","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take8":{"navigatorTitle":[{"text":"Take8","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Take8","kind":"identifier"}],"title":"Parsers.Take8","role":"symbol","url":"\/documentation\/parsing\/parsers\/take8","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","type":"reference","isActive":true},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"title":"Lazy","role":"symbol","url":"\/documentation\/parsing\/lazy","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/filter(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/filter(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5qnt6":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take5","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take5V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/take(_:)-5qnt6","title":"take(_:)","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringIntParser":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringIntParser","kind":"identifier"}],"title":"Parsers.SubstringIntParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","type":"topic","url":"\/documentation\/parsing\/parsers\/substringintparser","navigatorTitle":[{"text":"SubstringIntParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"beginning of a substring using a UTF-8 parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pipe(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","text":"Pipe"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">"}],"title":"pipe(_:)","url":"\/documentation\/parsing\/parser\/pipe(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take5":{"role":"symbol","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.\\","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take5","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take5","navigatorTitle":[{"text":"Take5","kind":"identifier"}],"title":"Parsers.Take5"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"title":"Always","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A parser that always succeeds by returning the provided value, but does not consume any of its"},{"type":"text","text":" "},{"type":"text","text":"input."}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-74wwn":{"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"kind":"symbol","type":"topic","title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-74wwn","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take6","preciseIdentifier":"s:7Parsing7ParsersO5Take6V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Input":{"kind":"symbol","required":true,"abstract":[{"text":"The kind of values this parser receives.","type":"text"}],"url":"\/documentation\/parsing\/parser\/input","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"title":"Input","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringUUIDParser":{"navigatorTitle":[{"text":"SubstringUUIDParser","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringUUIDParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringuuidparser","abstract":[{"text":"A parser that consumes a UUID from the beginning of a substring using a UTF-8 parser.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringUUIDParser","title":"Parsers.SubstringUUIDParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3ezb3":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"url":"\/documentation\/parsing\/parser\/take(_:)-3ezb3","title":"take(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take3V","text":"Take3"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"title":"Parsers.Filter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Filter"}],"type":"topic","role":"symbol","abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Filter"}],"url":"\/documentation\/parsing\/parsers\/filter","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-4u8o0":{"title":"parse(_:)","defaultImplementations":5,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","required":true,"role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/parse(_:)-4u8o0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","title":"Many","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take7":{"abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"navigatorTitle":[{"text":"Take7","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/take7","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take7","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","title":"Parsers.Take7","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"title":"Parsers.FlatMap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","type":"topic","url":"\/documentation\/parsing\/parsers\/flatmap","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"abstract":[{"text":"A parser that transforms the output of another parser into a new parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/prefixthrough","title":"PrefixThrough"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","title":"Rest","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns it as its output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"url":"\/documentation\/parsing\/rest","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take4":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take4","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"navigatorTitle":[{"text":"Take4","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","role":"symbol","title":"Parsers.Take4","url":"\/documentation\/parsing\/parsers\/take4","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"title":"OneOfMany","role":"symbol","url":"\/documentation\/parsing\/oneofmany","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/orElse(_:)":{"abstract":[{"text":"A parser that runs this parser and, if it fails, runs the given parser.","type":"text"}],"role":"symbol","kind":"symbol","title":"orElse(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"orElse"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"OneOf","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5OneOfV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/orelse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Output":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output","abstract":[{"type":"text","text":"The kind of values parsed by this parser."}],"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}],"url":"\/documentation\/parsing\/parser\/output","title":"Output","required":true,"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUnicodeScalars":{"title":"Parsers.SubstringToUnicodeScalars","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","role":"symbol","abstract":[{"text":"A parser that transforms a parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on","type":"text"},{"text":" ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"SubstringToUnicodeScalars","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringtounicodescalars","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToUnicodeScalars","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take10":{"url":"\/documentation\/parsing\/parsers\/take10","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Take10","kind":"identifier"}],"title":"Parsers.Take10","type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"navigatorTitle":[{"text":"Take10","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"url":"\/documentation\/parsing\/newline","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"abstract":[{"type":"text","text":"A type-erased parser of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"title":"AnyParser","role":"symbol","url":"\/documentation\/parsing\/anyparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-fbhx":{"url":"\/documentation\/parsing\/parser\/take(_:)-fbhx","role":"symbol","kind":"symbol","title":"take(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take10","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6Take10V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/compactMap(_:)":{"abstract":[{"text":"Returns a parser that outputs the non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" results of calling the given closure with the","type":"text"},{"text":" ","type":"text"},{"text":"output of this parser.","type":"text"}],"title":"compactMap(_:)","role":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/compactmap(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipFirst":{"navigatorTitle":[{"text":"SkipFirst","kind":"identifier"}],"abstract":[{"text":"A parser that runs two parsers, one after the other, taking only the output of the second","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkipFirst","kind":"identifier"}],"title":"Parsers.SkipFirst","role":"symbol","url":"\/documentation\/parsing\/parsers\/skipfirst","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pullback(_:)":{"type":"topic","title":"pullback(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/pullback(_:)","abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" of a parser.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"url":"\/documentation\/parsing\/end","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"End"}],"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"title":"End"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/skip(_:)":{"abstract":[{"text":"Returns a parser that runs this parser and the given parser, taking only the output of this","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","url":"\/documentation\/parsing\/parser\/skip(_:)","type":"topic","kind":"symbol","role":"symbol","title":"skip(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10SkipSecondV","text":"SkipSecond"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"url":"\/documentation\/parsing\/first","title":"First","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","role":"symbol","url":"\/documentation\/parsing\/parsers\/map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"type":"topic","title":"Parsers.Map","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Map"}],"abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","kind":"symbol","abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}],"title":"Parsers.BoolParser","navigatorTitle":[{"text":"BoolParser","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/boolparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUTF8View":{"abstract":[{"text":"A parser that transforms a parser on ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a parser on ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"SubstringToUTF8View","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/substringtoutf8view","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToUTF8View","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","title":"Parsers.SubstringToUTF8View","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"navigatorTitle":[{"text":"Pipe","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/pipe","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","title":"Parsers.Pipe","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloat80Parser":{"navigatorTitle":[{"kind":"identifier","text":"SubstringFloat80Parser"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/substringfloat80parser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","title":"Parsers.SubstringFloat80Parser","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringFloat80Parser"}],"abstract":[{"text":"A parser that consumes a float from the beginning of a substring.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"role":"symbol","kind":"symbol","title":"Whitespace","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/pullback","title":"Parsers.Pullback"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5wm45":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"F","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take7","preciseIdentifier":"s:7Parsing7ParsersO5Take7V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/take(_:)-5wm45","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-1tosc":{"kind":"symbol","title":"utf8","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO023UnicodeScalarViewToUTF8E0V","text":"UnicodeScalarViewToUTF8View","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/parser\/utf8-1tosc","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"parse(_:)","role":"symbol","url":"\/documentation\/parsing\/lazy\/parse(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-1fw8y":{"kind":"symbol","title":"take(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO9SkipFirstV","kind":"typeIdentifier","text":"SkipFirst"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, taking only the output of the"},{"type":"text","text":" "},{"type":"text","text":"given parser."}],"type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-1fw8y","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"url":"\/documentation\/parsing\/fail","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"type":"topic","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","title":"Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/eraseToAnyParser()":{"kind":"symbol","title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/parser\/erasetoanyparser()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-6e25a":{"title":"utf8","url":"\/documentation\/parsing\/parser\/utf8-6e25a","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","text":"SubstringToUTF8View","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol","abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" into a parser on "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOf":{"role":"symbol","abstract":[{"text":"A parser that runs the first parser and, if it fails, runs the second parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/oneof","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"title":"Parsers.OneOf"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"url":"\/documentation\/parsing\/startswith","title":"StartsWith","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-9ytif":{"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","url":"\/documentation\/parsing\/parser\/take(_:)-9ytif","type":"topic","kind":"symbol","role":"symbol","title":"take(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take8V","text":"Take8"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3thpr":{"url":"\/documentation\/parsing\/parser\/take(_:)-3thpr","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"title":"take(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take4V","kind":"typeIdentifier","text":"Take4"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a collection of UTF8 code units."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"type":"topic","title":"Parsers.IntParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","url":"\/documentation\/parsing\/parsers\/intparser","navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take9":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","role":"symbol","url":"\/documentation\/parsing\/parsers\/take9","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take9"}],"type":"topic","title":"Parsers.Take9","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Take9"}],"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take3":{"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take3","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Take3","kind":"identifier"}],"title":"Parsers.Take3","url":"\/documentation\/parsing\/parsers\/take3","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-226d4":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"url":"\/documentation\/parsing\/parser\/take(_:)-226d4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take9V","text":"Take9"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/stream":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","kind":"symbol","abstract":[{"type":"text","text":"Transforms the receiver parser into one that can parse streams of input."}],"type":"topic","title":"stream","url":"\/documentation\/parsing\/parser\/stream","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"text":".","kind":"text"},{"text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-6f1jr":{"type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-6f1jr","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take2","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol","title":"take(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning both outputs in a"},{"type":"text","text":" "},{"type":"text","text":"tuple."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"navigatorTitle":[{"text":"Take2","kind":"identifier"}],"abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take2","kind":"identifier"}],"title":"Parsers.Take2","role":"symbol","url":"\/documentation\/parsing\/parsers\/take2","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalParser":{"abstract":[{"type":"text","text":"A parser that parses "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" when its upstream parser fails."}],"title":"Parsers.OptionalParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalParser","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/optionalparser","navigatorTitle":[{"text":"OptionalParser","kind":"identifier"}],"kind":"symbol"}}}