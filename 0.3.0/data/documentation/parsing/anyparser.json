{"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"roleHeading":"Structure","symbolKind":"struct","role":"symbol","title":"AnyParser","externalID":"s:7Parsing9AnyParserV","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"modules":[{"name":"Parsing"}]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/parsing\/anyparser"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations"]}],"abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser forwards its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"},{"type":"text","text":" method to an arbitrary underlying parser having the same"},{"type":"text","text":" "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of the underlying "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","isActive":true},{"type":"text","text":" to wrap a publisher whose type has details you donâ€™t want to expose across API"},{"type":"text","text":" "},{"type":"text","text":"boundaries, such as different modules. When you use type erasure this way, you can change the"},{"type":"text","text":" "},{"type":"text","text":"underlying parser over time without affecting existing clients."}]}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-71nto":{"kind":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto","abstract":[{"text":"Creates a type-erasing parser to wrap the given parser.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/anyparser\/init(_:)-71nto"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/eraseToAnyParser()":{"title":"eraseToAnyParser()","url":"\/documentation\/parsing\/anyparser\/erasetoanyparser()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/parse(_:)":{"type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/anyparser\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-47tyc":{"type":"topic","url":"\/documentation\/parsing\/anyparser\/init(_:)-47tyc","kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","role":"symbol","abstract":[{"type":"text","text":"Creates a parser that wraps the given closure in its "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","type":"reference","isActive":true},{"type":"text","text":" method."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/Parser-Implementations":{"abstract":[],"title":"Parser Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/anyparser\/parser-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"abstract":[{"type":"text","text":"A type-erased parser of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"title":"AnyParser","role":"symbol","url":"\/documentation\/parsing\/anyparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"symbol"}}}