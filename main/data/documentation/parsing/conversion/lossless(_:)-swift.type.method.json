{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/lossless(_:)-swift.type.method"]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lossless"},{"kind":"text","text":"<"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Parsing10ConversionPAAE8losslessyAA11ConversionsO18FromLosslessStringVy_qd__Gqd__mAIRszs0fG11ConvertibleRd__lFZ","modules":[{"name":"Parsing"}],"symbolKind":"method","roleHeading":"Type Method","title":"lossless(_:)","role":"symbol","extendedModule":"Parsing"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A conversion from a string to a lossless string-convertible type."}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"seeAlsoSections":[{"title":"Common conversions","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lossless"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FromLosslessString","preciseIdentifier":"s:7Parsing11ConversionsO18FromLosslessStringV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LosslessStringConvertible","preciseIdentifier":"s:s25LosslessStringConvertibleP"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A type that conforms to ","type":"text"},{"code":"LosslessStringConvertible","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"type"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A conversion from a string to the given type.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.method","isActive":true,"type":"reference"},{"type":"text","text":" for a fluent version of this interface that transforms an"},{"type":"text","text":" "},{"type":"text","text":"existing conversion."}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToString"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubstringToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"}],"title":"string","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","role":"symbol","type":"topic","abstract":[{"text":"A conversion from ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/case(_:)-4j2n7":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"title":"case(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/parsing\/conversion\/case(_:)-4j2n7","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/lossless(_:)-swift.method":{"type":"topic","title":"lossless(_:)","kind":"symbol","url":"\/documentation\/parsing\/conversion\/lossless(_:)-swift.method","role":"symbol","abstract":[{"text":"Transforms this conversion to a string into a conversion to the given lossless","type":"text"},{"text":" ","type":"text"},{"text":"string-convertible type.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lossless"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO18FromLosslessStringV","text":"FromLosslessString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">>"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.method"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/lossless(_:)-swift.type.method":{"abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/conversion\/lossless(_:)-swift.type.method","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"lossless(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"url":"\/documentation\/parsing\/conversion\/int-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A conversion from a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"title":"int","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>"},{"type":"text","text":"."}]},"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/json(_:decoder:encoder:)-swift.type.method":{"abstract":[{"text":"A conversion from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" to the given codable type.","type":"text"}],"role":"symbol","title":"json(_:decoder:encoder:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"json"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoder"},{"text":": ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","type":"topic","url":"\/documentation\/parsing\/conversion\/json(_:decoder:encoder:)-swift.type.method"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","navigatorTitle":[{"text":"FromLosslessString","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromLosslessString","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/fromlosslessstring","title":"Conversions.FromLosslessString"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"abstract":[{"text":"A conversion from a given raw representable type’s raw value to itself.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"representing","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"representing(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"title":"double","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>"},{"type":"text","text":"."}]},"type":"topic","url":"\/documentation\/parsing\/conversion\/double-swift.type.property","abstract":[{"text":"A conversion from an ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"double"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","text":"FixedWidthIntegerToBinaryFloatingPoint"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/memberwise(_:)":{"abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"role":"symbol","title":"memberwise(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memberwise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/memberwise(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","text":"BytesToString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":">"}],"title":"string","kind":"symbol","abstract":[{"text":"A conversion from ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","title":"Conversions","url":"\/documentation\/parsing\/conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]}}}