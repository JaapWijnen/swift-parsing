{"metadata":{"externalID":"s:7Parsing4ManyVAASay6OutputQzGRs_AA6AlwaysVy5InputQzytGRs0_AKRs1_ytRs2_rlE7elementACyxAf2KytGxyXE_tcfc","title":"init(element:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"Parsing","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}],"symbolKind":"init","roleHeading":"Initializer"},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/parsing\/many\/init(element:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"element","content":[{"inlineContent":[{"text":"A parser to run multiple times to accumulate into a result.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:)","interfaceLanguage":"swift"},"abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"text":"of the outputs.","type":"text"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"title":"Many","url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(element:)","role":"symbol","url":"\/documentation\/parsing\/many\/init(element:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"[Element.Output]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}]}}}