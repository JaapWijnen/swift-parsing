{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally"]]},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/optionally\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Parsing"}],"role":"symbol","title":"init(_:)","externalID":"s:7Parsing10OptionallyVyACyxGxyXEcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally\/init(_:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"title":"Optionally","type":"topic","role":"symbol","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","kind":"symbol","url":"\/documentation\/parsing\/optionally","abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it fails."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Optionally","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally\/init(_:)","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/optionally\/init(_:)","kind":"symbol","type":"topic","title":"init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]}}}