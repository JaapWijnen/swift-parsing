{"variants":[{"paths":["\/documentation\/parsing\/first\/map(_:)-2ispo"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/Parser-Implementations"]]},"abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/map(_:)-2ispo","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that transforms values of this parserâ€™s output.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A parser of transformed outputs.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.map","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Optional.map","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Result.map","type":"codeVoice"},{"text":" in the Swift","type":"text"},{"text":" ","type":"text"},{"text":"standard library, as well as ","type":"text"},{"code":"Publisher.map","type":"codeVoice"},{"text":" in the Combine framework.","type":"text"}]},{"text":"Printability","anchor":"Printability","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mapping a parser with a transform function results in a parser that cannot print. If you need"},{"type":"text","text":" "},{"type":"text","text":"to transform the output of a parser and retain printability, use the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"type":"text","text":"-based"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","isActive":true,"type":"reference"},{"type":"text","text":" operator instead."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"map(_:)","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO3MapVy_xqd__Gqd__6OutputQzclF::SYNTHESIZED::s:7Parsing5FirstV","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/First":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"title":"First","url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"First"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"type":"topic","url":"\/documentation\/parsing\/parsers\/map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Map"}],"role":"symbol","title":"Parsers.Map"},"doc://co.pointfree.Parsing/documentation/Parsing/First/map(_:)-2ispo":{"type":"topic","title":"map(_:)","role":"symbol","url":"\/documentation\/parsing\/first\/map(_:)-2ispo","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/map(_:)-2ispo","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","role":"symbol","url":"\/documentation\/parsing\/conversion","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"title":"Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/First/Parser-Implementations":{"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/Parser-Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/parsing\/first\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-18m9d":{"type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","abstract":[{"text":"Returns a parser-printer that transforms the output of this parser with a given conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","title":"map(_:)"}}}