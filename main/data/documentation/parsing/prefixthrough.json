{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/parsing\/prefixthrough"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","interfaceLanguage":"swift"},"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"title":"Common parsers","generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix(through:)"},{"type":"text","text":", and uses similar logic under the hood to"},{"type":"text","text":" "},{"type":"text","text":"consume and return input through a particular subsequence."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let lineParser = PrefixThrough(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","try line.parse(&input)  \/\/ \"Hello\\n\"","input                   \/\/ \"world\\n\""]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-1x536","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-4k6i","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-6uloj"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"metadata":{"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing13PrefixThroughV","title":"PrefixThrough","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"role":"symbol"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","title":"Lazy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"url":"\/documentation\/parsing\/lazy","kind":"symbol","abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},{"type":"text","text":" method before running the given closure to"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"navigatorTitle":[{"text":"Lazy","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"text":"units.","type":"text"}],"navigatorTitle":[{"text":"Digits","kind":"identifier"}],"title":"Digits","url":"\/documentation\/parsing\/digits","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/prefixthrough\/parserprinter-implementations","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"type":"topic","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"role":"symbol","title":"Whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"deprecated":true,"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"title":"Newline","url":"\/documentation\/parsing\/newline","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","url":"\/documentation\/parsing\/stream","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"type":"topic","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"role":"symbol","title":"Stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"title":"Optionally","type":"topic","role":"symbol","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","kind":"symbol","url":"\/documentation\/parsing\/optionally","abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it fails."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Optionally","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/oneof","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"title":"OneOf","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","title":"FromUTF8View","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUTF8View","kind":"identifier"}],"url":"\/documentation\/parsing\/fromutf8view","kind":"symbol","deprecated":true,"abstract":[],"navigatorTitle":[{"text":"FromUTF8View","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"title":"PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyParser","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","role":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/possibleMatch":{"url":"\/documentation\/parsing\/prefixthrough\/possiblematch","type":"topic","title":"possibleMatch","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possibleMatch","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a string."}],"type":"topic","role":"article","title":"Bool","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","url":"\/documentation\/parsing\/bool"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"role":"symbol","title":"FromUnicodeScalarView","navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"kind":"symbol","deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","type":"topic","url":"\/documentation\/parsing\/fromunicodescalarview"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"text":"of the outputs.","type":"text"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"title":"Many","url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","title":"From","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"url":"\/documentation\/parsing\/from","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"From","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)":{"role":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Input.Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/parse(_:)":{"role":"symbol","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/parse(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"navigatorTitle":[{"text":"Not","kind":"identifier"}],"title":"Not","url":"\/documentation\/parsing\/not","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"A parser that consumes an integer from the beginning of a string."}],"title":"Int","url":"\/documentation\/parsing\/int","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[],"title":"parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","kind":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" value from the beginning of a string."}],"title":"UUID","url":"\/documentation\/parsing\/uuid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a string literal from the beginning of a string."}],"title":"String","url":"\/documentation\/parsing\/string","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"title":"First","url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"First"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"title":"Skip","url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/Parser-Implementations":{"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/prefixthrough\/parser-implementations","kind":"article","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:by:)-1x536":{"type":"topic","title":"init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-1x536","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/prefixthrough\/init(_:by:)-1x536"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","title":"PrefixThrough","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixthrough","kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:by:)-6uloj":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-6uloj","title":"init(_:by:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/prefixthrough\/init(_:by:)-6uloj"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:by:)-4k6i":{"role":"symbol","title":"init(_:by:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)-4k6i","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/init(_:by:)-4k6i","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:SS8UTF8ViewV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"A parser that consumes the characters contained in a "},{"type":"codeVoice","code":"CharacterSet"},{"text":" from the beginning of a string.","type":"text"}],"title":"CharacterSet","url":"\/documentation\/parsing\/characterset","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"title":"Always","url":"\/documentation\/parsing\/always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/areEquivalent":{"role":"symbol","title":"areEquivalent","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/areequivalent","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a string."}],"type":"topic","role":"article","title":"Float","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","url":"\/documentation\/parsing\/float"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"deprecated":true,"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}],"title":"FromSubstring","url":"\/documentation\/parsing\/fromsubstring","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"role":"symbol","title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"url":"\/documentation\/parsing\/peek","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","title":"Peek","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Peek","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"kind":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"title":"Fail","type":"topic","url":"\/documentation\/parsing\/fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"role":"symbol","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"title":"StartsWith","url":"\/documentation\/parsing\/startswith","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"navigatorTitle":[{"text":"End","kind":"identifier"}],"title":"End","url":"\/documentation\/parsing\/end","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"navigatorTitle":[{"text":"Rest","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"type":"topic","role":"symbol","title":"Rest","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","url":"\/documentation\/parsing\/rest"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"role":"symbol","abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"title":"Consumed","url":"\/documentation\/parsing\/consumed","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"kind":"article","role":"article","type":"topic","abstract":[{"type":"text","text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a"},{"type":"text","text":" "},{"text":"string.","type":"text"}],"title":"CaseIterable","url":"\/documentation\/parsing\/caseiterable","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable"}}}