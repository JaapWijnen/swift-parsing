{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/anyparserprinter"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"This parser-printer forwards its ","type":"text"},{"type":"codeVoice","code":"parse(_:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods to an arbitrary","type":"text"},{"text":" ","type":"text"},{"text":"underlying parser-printer having the same ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" types, hiding the specifics of","type":"text"},{"text":" ","type":"text"},{"text":"the underlying ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"AnyParserPrinter"},{"type":"text","text":" to wrap a parser whose type has details you donâ€™t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying parser over time without affecting existing clients."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Structure","title":"AnyParserPrinter","externalID":"s:7Parsing16AnyParserPrinterV","modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"title":"AnyParserPrinter","navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","title":"print(_:into:)","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/parse(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","abstract":[],"title":"parse(_:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","abstract":[],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"title":"Parser Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"kind":"symbol","title":"init(parse:print:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations","type":"topic","title":"ParserPrinter Implementations","abstract":[],"role":"collectionGroup","kind":"article"}}}