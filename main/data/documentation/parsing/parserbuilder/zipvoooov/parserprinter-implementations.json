{"metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"ParserPrinter Implementations"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV"]]},"sections":[],"kind":"article","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/print(_:into:)"],"generated":true,"title":"Instance Methods"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOOV/eraseToAnyParserPrinter()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoooov\/erasetoanyparserprinter()","title":"eraseToAnyParserPrinter()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/eraseToAnyParserPrinter()","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOOV/print(_:into:)":{"abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P4"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P5"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P3.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P4.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P4.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P5.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P5.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/parserbuilder\/zipvoooov\/print(_:into:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"title":"print(_:into:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","kind":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOOV":{"navigatorTitle":[{"text":"ZipVOOOOV","kind":"identifier"}],"abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvoooov","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV","title":"ParserBuilder.ZipVOOOOV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ZipVOOOOV","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOOV/print(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOOV\/print(_:)","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"_EmptyInitializable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoooov\/print(_:)","title":"print(_:)","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}]}}}