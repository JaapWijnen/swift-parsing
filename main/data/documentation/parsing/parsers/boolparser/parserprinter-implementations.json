{"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/print(_:into:)"],"generated":true,"title":"Instance Methods"}],"metadata":{"modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations","role":"collectionGroup"},"kind":"article","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser/eraseToAnyParserPrinter()":{"role":"symbol","title":"eraseToAnyParserPrinter()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/eraseToAnyParserPrinter()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/boolparser\/erasetoanyparserprinter()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser/print(_:into:)":{"kind":"symbol","title":"print(_:into:)","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"code":"Input.Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/print(_:into:)","role":"symbol","url":"\/documentation\/parsing\/parsers\/boolparser\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser/print(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/boolparser\/print(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}]},"type":"topic","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser\/print(_:)","title":"print(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"url":"\/documentation\/parsing\/parsers\/boolparser","navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"type":"topic","role":"symbol","kind":"symbol","title":"Parsers.BoolParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}]}}}