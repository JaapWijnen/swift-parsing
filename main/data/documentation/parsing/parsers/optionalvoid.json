{"variants":[{"paths":["\/documentation\/parsing\/parsers\/optionalvoid"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements in parser builder blocks:"}],"type":"paragraph"},{"syntax":"swift","code":["Parse {","  \"Hello\"","  if useComma {","    \",\"","  }","  \" \"","  Rest()","}"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"metadata":{"externalID":"s:7Parsing7ParsersO12OptionalVoidV","role":"symbol","title":"Parsers.OptionalVoid","extendedModule":"Parsing","roleHeading":"Structure","modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Wrapped.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"ParserPrinter","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"type":"topic","url":"\/documentation\/parsing\/parsers\/optionalvoid","role":"symbol","navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","title":"Parsers.OptionalVoid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/Parser-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/parsers\/optionalvoid\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parsers\/optionalvoid\/parserprinter-implementations","title":"ParserPrinter Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/init(wrapped:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)","url":"\/documentation\/parsing\/parsers\/optionalvoid\/init(wrapped:)","title":"init(wrapped:)","type":"topic","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"wrapped","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/parse(_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)","url":"\/documentation\/parsing\/parsers\/optionalvoid\/parse(_:)","title":"parse(_:)","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}]}}}