{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Conversion.case(_:)"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/case(_:)-4dlno"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"case(_:)","role":"symbol","modules":[{"name":"Parsing"}],"symbolKind":"method","externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd__ytGqd__AHRszlFZ::SYNTHESIZED::s:7Parsing11ConversionsO18FromLosslessStringV","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Parsing"},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/conversions\/fromlosslessstring\/case(_:)-4dlno"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/Conversion-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/conversion-implementations","title":"Conversion Implementations"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/casepaths\/casepath","abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded"},{"type":"text","text":" "},{"type":"text","text":"value."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"kind":"symbol","title":"CasePath","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","navigatorTitle":[{"text":"FromLosslessString","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromLosslessString","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/fromlosslessstring","title":"Conversions.FromLosslessString"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","title":"Conversions","url":"\/documentation\/parsing\/conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/case(_:)-4dlno":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/case(_:)-4dlno","type":"topic","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/case(_:)-4dlno","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","title":"case(_:)"}}}