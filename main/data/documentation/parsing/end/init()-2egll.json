{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-2egll","interfaceLanguage":"swift"},"metadata":{"role":"symbol","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"title":"init()","symbolKind":"init","externalID":"s:7Parsing3EndVAASs8UTF8ViewVRszrlEACyAEGycfc","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end\/init()-2egll"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"navigatorTitle":[{"text":"End","kind":"identifier"}],"title":"End","url":"\/documentation\/parsing\/end","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()-2egll":{"role":"symbol","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-2egll","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"init()","url":"\/documentation\/parsing\/end\/init()-2egll"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"role":"collection","title":"Parsing","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","abstract":[]}}}