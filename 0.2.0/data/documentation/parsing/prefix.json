{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"},"metadata":{"role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"modules":[{"name":"Parsing"}],"roleHeading":"Structure","title":"Prefix","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"externalID":"s:7Parsing6PrefixV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix"]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix"},{"type":"text","text":", which it uses under the hood to consume a number"},{"type":"text","text":" "},{"type":"text","text":"of elements and return them as output. It can be configured with minimum and maximum lengths,"},{"type":"text","text":" "},{"type":"text","text":"as well as a predicate."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, to parse as many numbers off the beginning of a substring:"}],"type":"paragraph"},{"type":"codeListing","code":["var input = \"123 hello world\"[...]","Prefix { $0.isNumber }.parse(&input) \/\/ \"123\"","input \/\/ \" Hello world\""],"syntax":"swift"},{"inlineContent":[{"text":"If you wanted this parser to fail if ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"no"}]},{"text":" numbers are consumed, you could introduce a minimum","type":"text"},{"text":" ","type":"text"},{"text":"length.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["var input = \"No numbers here\"[...]","Prefix(1...) { $0.isNumber }).parse(&input) \/\/ nil","input \/\/ \"No numbers here\""],"syntax":"swift"},{"inlineContent":[{"text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and","type":"text"},{"text":" ","type":"text"},{"text":"maximum lengths provided:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["var input = \"Lorem ipsum dolor\"[...]","Prefix(2).parse(&input) \/\/ \"Lo\"","input \/\/ \"rem ipsum dolor\""],"syntax":"swift"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","title":"Parsing","url":"\/documentation\/parsing","role":"collection","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/predicate":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?"}],"title":"predicate","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/predicate","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"title":"init(_:while:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/parse(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)","title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/prefix\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/minLength":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"title":"minLength","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/minlength","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"title":"init(_:while:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"title":"init(_:while:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/prefix\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","title":"Parser Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-4n2mo":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"title":"init(_:while:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/maxLength":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?"}],"title":"maxLength","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/maxlength","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(minLength:maxLength:while:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"title":"init(minLength:maxLength:while:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]}}}