{"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take2V","text":"Take2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"role":"symbol","extendedModule":"Parsing","title":"take(_:)","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE4takeyAA7ParsersO5Take2Vy_xqd__Gqd__AaBRd__5InputQyd__AJRtzlF::SYNTHESIZED::s:7Parsing7ParsersO6StreamV","symbolKind":"method"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/take(_:)-9g9b0","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning both outputs in a","type":"text"},{"text":" ","type":"text"},{"text":"tuple.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/parsers\/stream\/take(_:)-9g9b0"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"Take2","preciseIdentifier":"s:7Parsing7ParsersO5Take2V","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"parser","content":[{"inlineContent":[{"type":"text","text":"A parser to run immediately after this parser."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A parser that runs two parsers, returning both outputs in a tuple.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator is used to gather up multiple values and can bundle them into a single data type"},{"type":"text","text":" "},{"type":"text","text":"when used alongside the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/map(_:)"},{"type":"text","text":" operator."}]},{"type":"paragraph","inlineContent":[{"text":"In the following example, two ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":"s are parsed using ","type":"text"},{"code":"take(_:)-1fw8y","type":"codeVoice"},{"text":" before they are","type":"text"},{"text":" ","type":"text"},{"text":"combined into a ","type":"text"},{"code":"Point","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["struct Point { var x, y: Double }","","var input = \"-1.5,1\"[...].utf8","let output = Double.parser()","  .skip(StartsWith(\",\"))","  .take(Double.parser())","  .map(Point.init)","  .parse(&input) \/\/ => Point(x: -1.5, y: 1)","precondition(Substring(input) == \"\")"],"syntax":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/take(_:)-9g9b0":{"title":"take(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/take(_:)-9g9b0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V","text":"Take2"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/stream\/take(_:)-9g9b0","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning both outputs in a"},{"type":"text","text":" "},{"type":"text","text":"tuple."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take2"}],"title":"Parsers.Take2","url":"\/documentation\/parsing\/parsers\/take2","role":"symbol","type":"topic","abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Take2"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","title":"Parsing","url":"\/documentation\/parsing","role":"collection","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"type":"topic","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","title":"Parsers.Stream","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/stream\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/Parser-Implementations","title":"Parser Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/map(_:)":{"title":"map(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"type":"topic","url":"\/documentation\/parsing\/parsers\/stream\/map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic"}}}