{"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/stream"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeReplaceableCollection","preciseIdentifier":"s:Sm","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","isActive":true},{"type":"text","text":" operation, which constructs this type."}],"type":"paragraph"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/init(upstream:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/Parser-Implementations"],"generated":true}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"Stream","kind":"identifier"}],"title":"Parsers.Stream","role":"symbol","externalID":"s:7Parsing7ParsersO6StreamV","extendedModule":"Parsing","symbolKind":"struct"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/parse(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/parse(_:)","url":"\/documentation\/parsing\/parsers\/stream\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"title":"parse(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyIterator","kind":"typeIdentifier","preciseIdentifier":"s:s11AnyIteratorV"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> [","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"]?","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/init(upstream:)":{"title":"init(upstream:)","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/init(upstream:)","url":"\/documentation\/parsing\/parsers\/stream\/init(upstream:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/stream":{"type":"topic","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Stream","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"stream","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","url":"\/documentation\/parsing\/parser\/stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","title":"Parsing","url":"\/documentation\/parsing","role":"collection","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"type":"topic","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","title":"Parsers.Stream","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/stream\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/Parser-Implementations","title":"Parser Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream/upstream":{"url":"\/documentation\/parsing\/parsers\/stream\/upstream","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"text":"Upstream","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream\/upstream","abstract":[],"role":"symbol","title":"upstream","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic"}}}