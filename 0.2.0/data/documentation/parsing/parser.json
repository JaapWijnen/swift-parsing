{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx"]}],"sections":[],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"],"kind":"relationships","type":"conformingTypes"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"A parser attempts to parse a nebulous piece of data, represented by the ","type":"text"},{"code":"Input","type":"codeVoice"},{"type":"text","text":" associated type,"},{"type":"text","text":" "},{"type":"text","text":"into something more well-structured, represented by the "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" associated type. The parser"},{"type":"text","text":" "},{"type":"text","text":"implements the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","isActive":true},{"type":"text","text":" method, which is handed an "},{"code":"inout Input","type":"codeVoice"},{"type":"text","text":", and its job is to"},{"type":"text","text":" "},{"type":"text","text":"turn this into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" if possible, or otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it cannot, which represents"},{"type":"text","text":" "},{"type":"text","text":"a parsing failure."}],"type":"paragraph"},{"inlineContent":[{"text":"The argument of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0"},{"text":" function is ","type":"text"},{"type":"codeVoice","code":"inout"},{"text":" because a parser will usually","type":"text"},{"text":" ","type":"text"},{"text":"consume some of the input in order to produce an output. For example, we can use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Int.parser()"},{"text":" parser to extract an integer from the beginning of a ","type":"text"},{"type":"codeVoice","code":"UTF8View"},{"text":" and consume that","type":"text"},{"text":" ","type":"text"},{"text":"portion of the string:","type":"text"}],"type":"paragraph"},{"code":["var input = \"123 Hello world\"[...].utf8","let output = Int.parser.parse(&input)","precondition(output == 123)","precondition(input.elementsEqual(\" Hello world\"[...].utf8))"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"It is best practice for a parser to "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" consume any of the input if it fails to produce an"},{"type":"text","text":" "},{"type":"text","text":"output. This allows for “backtracking”, which means if a parser fails then another parser can"},{"type":"text","text":" "},{"type":"text","text":"try on the original input."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"kind":"symbol","metadata":{"externalID":"s:7Parsing6ParserP","roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"modules":[{"name":"Parsing"}],"title":"Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUTF8View":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringToUTF8View"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","title":"Parsers.SubstringToUTF8View","url":"\/documentation\/parsing\/parsers\/substringtoutf8view","role":"symbol","abstract":[{"text":"A parser that transforms a parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToUTF8View"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","title":"Parsing","url":"\/documentation\/parsing","role":"collection","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"navigatorTitle":[{"kind":"identifier","text":"First"}],"abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","url":"\/documentation\/parsing\/first","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"title":"First","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"type":"topic","abstract":[{"type":"text","text":"A parser that always succeeds by returning the provided value, but does not consume any of its"},{"type":"text","text":" "},{"type":"text","text":"input."}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"kind":"symbol","title":"Always","url":"\/documentation\/parsing\/always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/eraseToAnyParser()":{"url":"\/documentation\/parsing\/parser\/erasetoanyparser()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","title":"eraseToAnyParser()","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take6":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take6"}],"title":"Parsers.Take6","url":"\/documentation\/parsing\/parsers\/take6","role":"symbol","type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Take6"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloat80Parser":{"title":"Parsers.SubstringFloat80Parser","navigatorTitle":[{"text":"SubstringFloat80Parser","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloat80Parser","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a substring."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","url":"\/documentation\/parsing\/parsers\/substringfloat80parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","type":"reference","isActive":true},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","type":"topic","url":"\/documentation\/parsing\/lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"title":"Lazy","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","type":"topic","abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"kind":"symbol","title":"flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-6f1jr":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning both outputs in a","type":"text"},{"text":" ","type":"text"},{"text":"tuple.","type":"text"}],"kind":"symbol","title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-6f1jr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take2V","text":"Take2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-fbhx":{"title":"take(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx","type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-fbhx","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6Take10V","text":"Take10"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"title":"PrefixThrough","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"url":"\/documentation\/parsing\/prefixthrough","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","type":"topic","url":"\/documentation\/parsing\/lazy\/parse(_:)","title":"parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"type":"topic","abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"navigatorTitle":[{"kind":"identifier","text":"Fail"}],"kind":"symbol","title":"Fail","url":"\/documentation\/parsing\/fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/filter(_:)":{"url":"\/documentation\/parsing\/parser\/filter(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefixupto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"title":"PrefixUpTo","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take4":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Take4","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/take4","title":"Parsers.Take4","role":"symbol","navigatorTitle":[{"text":"Take4","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"type":"topic","abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"kind":"symbol","title":"Whitespace","url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take11":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","kind":"symbol","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/take11","title":"Parsers.Take11","navigatorTitle":[{"kind":"identifier","text":"Take11"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take11"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"type":"topic","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","title":"Parsers.Stream","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline","url":"\/documentation\/parsing\/newline","role":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","title":"AnyParser","url":"\/documentation\/parsing\/anyparser","role":"symbol","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"type":"topic","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/map","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","navigatorTitle":[{"text":"Map","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Map","kind":"identifier"}],"title":"Parsers.Map"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pullback(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","title":"pullback(_:)","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","url":"\/documentation\/parsing\/parser\/pullback(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-1fw8y":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"SkipFirst","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO9SkipFirstV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Returns a parser that runs this parser and the given parser, taking only the output of the","type":"text"},{"text":" ","type":"text"},{"text":"given parser.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-1fw8y","title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipFirst":{"url":"\/documentation\/parsing\/parsers\/skipfirst","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SkipFirst"}],"title":"Parsers.SkipFirst","abstract":[{"type":"text","text":"A parser that runs two parsers, one after the other, taking only the output of the second"},{"type":"text","text":" "},{"type":"text","text":"parser."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SkipFirst"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3ezb3":{"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-3ezb3","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take3","preciseIdentifier":"s:7Parsing7ParsersO5Take3V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take2"}],"title":"Parsers.Take2","url":"\/documentation\/parsing\/parsers\/take2","role":"symbol","type":"topic","abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Take2"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"url":"\/documentation\/parsing\/conditional","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"title":"Conditional"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take7":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Take7","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"navigatorTitle":[{"text":"Take7","kind":"identifier"}],"kind":"symbol","title":"Parsers.Take7","url":"\/documentation\/parsing\/parsers\/take7","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take3":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take3"}],"title":"Parsers.Take3","url":"\/documentation\/parsing\/parsers\/take3","role":"symbol","type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Take3"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringIntParser":{"navigatorTitle":[{"kind":"identifier","text":"SubstringIntParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringIntParser"}],"title":"Parsers.SubstringIntParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","url":"\/documentation\/parsing\/parsers\/substringintparser","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a substring using a UTF-8 parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"type":"topic","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/flatmap","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"title":"Parsers.FlatMap","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"text":"beginning of a collection of UTF8 code units.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","type":"topic","url":"\/documentation\/parsing\/parsers\/intparser","navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"title":"Parsers.IntParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Input":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/input","required":true,"role":"symbol","title":"Input","abstract":[{"type":"text","text":"The kind of values this parser receives."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","abstract":[],"kind":"symbol","deprecated":true,"url":"\/documentation\/parsing\/firstwhere","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"title":"FirstWhere"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/unicodeScalars":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/unicodescalars","role":"symbol","title":"unicodeScalars","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeScalars"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO25SubstringToUnicodeScalarsV","text":"SubstringToUnicodeScalars"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-74wwn":{"role":"symbol","title":"take(_:)","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"url":"\/documentation\/parsing\/parser\/take(_:)-74wwn","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take6V","text":"Take6","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","title":"Rest","url":"\/documentation\/parsing\/rest","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns it as its output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloatParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringFloatParser"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","title":"Parsers.SubstringFloatParser","url":"\/documentation\/parsing\/parsers\/substringfloatparser","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a substring."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringFloatParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"title":"Parsers.Filter","url":"\/documentation\/parsing\/parsers\/filter","role":"symbol","type":"topic","abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Filter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"type":"topic","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"kind":"symbol","title":"StartsWith","url":"\/documentation\/parsing\/startswith","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3thpr":{"role":"symbol","title":"take(_:)","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"url":"\/documentation\/parsing\/parser\/take(_:)-3thpr","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take4V","text":"Take4","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take9":{"type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take9"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","title":"Parsers.Take9","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Take9"}],"url":"\/documentation\/parsing\/parsers\/take9"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"type":"topic","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"navigatorTitle":[{"kind":"identifier","text":"End"}],"kind":"symbol","title":"End","url":"\/documentation\/parsing\/end","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/ignoreOutput()":{"title":"ignoreOutput()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","role":"symbol","url":"\/documentation\/parsing\/parser\/ignoreoutput()","abstract":[{"type":"text","text":"Returns a parser that discards the output of this parser by returning "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" instead."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing4SkipV","text":"Skip"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","role":"symbol","type":"topic","title":"Parsers.BoolParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/boolparser","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"navigatorTitle":[{"text":"BoolParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/compactMap(_:)":{"title":"compactMap(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","role":"symbol","url":"\/documentation\/parsing\/parser\/compactmap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"navigatorTitle":[{"text":"Many","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Many","kind":"identifier"}],"title":"Many","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"title":"Parsers.CompactMap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given transformation with the"},{"type":"text","text":" "},{"type":"text","text":"output of its upstream parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UnicodeScalarViewToUTF8View":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnicodeScalarViewToUTF8View","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","type":"topic","url":"\/documentation\/parsing\/parsers\/unicodescalarviewtoutf8view","navigatorTitle":[{"text":"UnicodeScalarViewToUTF8View","kind":"identifier"}],"title":"Parsers.UnicodeScalarViewToUTF8View","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"type":"topic","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Skip"}],"url":"\/documentation\/parsing\/skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-1tosc":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","type":"topic","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"kind":"symbol","title":"utf8","url":"\/documentation\/parsing\/parser\/utf8-1tosc","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"utf8"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO023UnicodeScalarViewToUTF8E0V","text":"UnicodeScalarViewToUTF8View"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Float80Parser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Float80Parser"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","title":"Parsers.Float80Parser","url":"\/documentation\/parsing\/parsers\/float80parser","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Float80Parser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUnicodeScalars":{"url":"\/documentation\/parsing\/parsers\/substringtounicodescalars","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToUnicodeScalars"}],"title":"Parsers.SubstringToUnicodeScalars","abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringToUnicodeScalars"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take10":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take10"}],"type":"topic","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"navigatorTitle":[{"kind":"identifier","text":"Take10"}],"kind":"symbol","title":"Parsers.Take10","url":"\/documentation\/parsing\/parsers\/take10","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5qnt6":{"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","url":"\/documentation\/parsing\/parser\/take(_:)-5qnt6","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take5V","kind":"typeIdentifier","text":"Take5"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"take(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","title":"Parsers.FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","type":"topic","kind":"symbol","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Output":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/output","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output","title":"Output","abstract":[{"type":"text","text":"The kind of values parsed by this parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-9ytif":{"type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"F","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"G","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take8","preciseIdentifier":"s:7Parsing7ParsersO5Take8V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","title":"take(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-9ytif"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOf":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"abstract":[{"text":"A parser that runs the first parser and, if it fails, runs the second parser.","type":"text"}],"title":"Parsers.OneOf","url":"\/documentation\/parsing\/parsers\/oneof","navigatorTitle":[{"text":"OneOf","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-4u8o0":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/parse(_:)-4u8o0","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"defaultImplementations":5,"role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringDoubleParser":{"abstract":[{"type":"text","text":"A parser that consumes a double from the beginning of a substring."}],"url":"\/documentation\/parsing\/parsers\/substringdoubleparser","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringDoubleParser"}],"title":"Parsers.SubstringDoubleParser","navigatorTitle":[{"kind":"identifier","text":"SubstringDoubleParser"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser":{"navigatorTitle":[{"kind":"identifier","text":"SubstringBoolParser"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/substringboolparser","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringBoolParser"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","title":"Parsers.SubstringBoolParser","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a substring."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-6e25a":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/utf8-6e25a","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","text":"SubstringToUTF8View"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a","title":"utf8","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" into a parser on "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take8":{"type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take8","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","title":"Parsers.Take8","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Take8","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take8"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/stream":{"type":"topic","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Stream","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"stream","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","url":"\/documentation\/parsing\/parser\/stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/DoubleParser":{"abstract":[{"type":"text","text":"A parser that consumes a double from the beginning of a collection of UTF-8 code units."}],"url":"\/documentation\/parsing\/parsers\/doubleparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleParser"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","navigatorTitle":[{"kind":"identifier","text":"DoubleParser"}],"title":"Parsers.DoubleParser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-226d4":{"type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take9","preciseIdentifier":"s:7Parsing7ParsersO5Take9V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4","title":"take(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-226d4"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","url":"\/documentation\/parsing\/parsers\/pullback","kind":"symbol","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"title":"Parsers.Pullback"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SkipSecond","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","abstract":[{"type":"text","text":"A parser that runs two parsers, one after the other, taking only the output of the first"},{"type":"text","text":" "},{"type":"text","text":"parser."}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/skipsecond","type":"topic","role":"symbol","navigatorTitle":[{"text":"SkipSecond","kind":"identifier"}],"title":"Parsers.SkipSecond"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/skip(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10SkipSecondV","text":"SkipSecond"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","title":"skip(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, taking only the output of this"},{"type":"text","text":" "},{"type":"text","text":"parser."}],"url":"\/documentation\/parsing\/parser\/skip(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5wm45":{"type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"F","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take7","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take7V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"take(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-5wm45","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"title":"Parsers.Pipe","role":"symbol","navigatorTitle":[{"text":"Pipe","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pipe","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","abstract":[{"text":"A parser that runs this parser, pipes its output into the given parser, and returns the output","type":"text"},{"text":" ","type":"text"},{"text":"of the given parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pipe(_:)":{"type":"topic","abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"text":" ","type":"text"},{"text":"the output of the given parser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"pipe(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/pipe(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5a47k":{"type":"topic","title":"take(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"J"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6Take11V","text":"Take11"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"J"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/take(_:)-5a47k","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OptionalParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","abstract":[{"type":"text","text":"A parser that parses "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" when its upstream parser fails."}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/optionalparser","type":"topic","role":"symbol","navigatorTitle":[{"text":"OptionalParser","kind":"identifier"}],"title":"Parsers.OptionalParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take5":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take5","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","url":"\/documentation\/parsing\/parsers\/take5","kind":"symbol","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.\\","type":"text"}],"navigatorTitle":[{"text":"Take5","kind":"identifier"}],"title":"Parsers.Take5"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/orElse(_:)":{"type":"topic","abstract":[{"text":"A parser that runs this parser and, if it fails, runs the given parser.","type":"text"}],"url":"\/documentation\/parsing\/parser\/orelse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orElse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5OneOfV","text":"OneOf"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"orElse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","type":"topic","url":"\/documentation\/parsing\/oneofmany","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"title":"OneOfMany","kind":"symbol"}}}